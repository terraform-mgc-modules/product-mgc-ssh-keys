name: Terraform Format, Validate, and Test

permissions:
  contents: read
  # Adicione permissões extras apenas se necessário

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.9.3

      - name: Terraform Init
        run: terraform init -upgrade
        env:
          # Credenciais para o backend Cloudflare R2 (usa variáveis AWS)
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          # Cloudflare API Token (para provider cloudflare se necessário)
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          
          # Variáveis do Terraform para o provider MGC
          TF_VAR_ssh_key_value: ${{ secrets.SSH_KEY_VALUE }}
          TF_VAR_mgc_api_key: ${{ secrets.MGC_API_KEY }}
          TF_VAR_mgc_key_id: ${{ secrets.MGC_KEY_ID }}
          TF_VAR_mgc_key_secret: ${{ secrets.MGC_KEY_SECRET }}

      - name: Terraform Format
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: terraform fmt -check -recursive -diff

      - name: Terraform Validate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: terraform validate

      - name: Terraform Test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: terraform test

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_ssh_key_value: ${{ secrets.SSH_KEY_VALUE }}
          TF_VAR_mgc_api_key: ${{ secrets.MGC_API_KEY }}
          TF_VAR_mgc_key_id: ${{ secrets.MGC_KEY_ID }}
          TF_VAR_mgc_key_secret: ${{ secrets.MGC_KEY_SECRET }}
        run: terraform plan

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_ssh_key_value: ${{ secrets.SSH_KEY_VALUE }}
          TF_VAR_mgc_api_key: ${{ secrets.MGC_API_KEY }}
          TF_VAR_mgc_key_id: ${{ secrets.MGC_KEY_ID }}
          TF_VAR_mgc_key_secret: ${{ secrets.MGC_KEY_SECRET }}
        run: terraform apply -auto-approve
